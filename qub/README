OVERVIEW
========

This folder contains source code for functions needed for loading/saving
QuB-format files and running optimizations functions implemented in QuB.
Loading QuB model (.qmf) files requires a binary module compiled from
QuB's source code. Due to licensing implications, the QuB source code
cannot be included directly with SPARTAN.

- forQuB: saves time-series data into a format importable in QuB.
- qub_loadModel: loads .qmf files as SPARTAN model objects by calling qub_loadTree.
- qub_loadTree: loads .qmf files as structs into MATLAB.
- qub_saveModel: saves SPARTAN model object as a .qmf file.
- qub_saveTree: saves SPARTAN model object to .qmf file by calling qub_saveTree.
- qubtree: copied from the QuB Express source code directory with the same name (see below).
- qubsuite: will contain output binary library files when compiling qubtree.



GENERAL COMPILATION NOTES FOR QUB SOURCE CODE
=============================================

QuB Express (version 1.12.6, 2017-01-24) source code was obtained from the 
following address Sept. 2017. I used QuB Express because the relevant functions
were the easiest to extract from the rest of the source code.

  https://qub.mandelics.com/sources.html

The source code required a few minor adjustments to support modern compilers.
These have already been made to the source code provided with SPARTAN.
See the note at the end of this document for details.

Only one library from the QuB source code is needed to load/save QuB-format
files: qubtree. This is compiled as static library to minimize potential
issues with finding dynamic libraries at runtime in the MATLAB environment.
When compiled, the static library files will be in the "qubsuite" directory.

To compile the mex files, you must have the MATLAB compiler module and
 you must have already run "mex -setup" and selected the appropriate compiler.
 Note that MATLAB2015a requires gcc 4.7.x on Linux).


COMPILING ON WINDOWS
====================

Prerequisites: Visual Studio 2015 with the Windows SDK.

Windows binaries were compiled with Visual Studio Community 2015, targeting
VC++14 / Windows 8.1 SDK / 64-bit / Release version.

MATLAB 2015a (currently the primary target of all binary builds for SPARTAN)
does not directly support recent versions of Visual Studio. To compile with
VS 2015, I used the following procedure to install new mexopt files.

  http://kaba.hilvi.org/homepage/blog/vs2015_in_matlab_2015/vs_2015_in_matlab_2015.htm

Finally, run the qubtree_compile_mex function in MATLAB to make the MEX files.



COMPILING ON LINUX AND MAC
==========================

Linux pre-compiled binaries were made on Ubuntu 16.04, AMD64. To support MATLAB
version 2015a, you will need gcc version 4.7. To install this and the other 
required libraries (boost and gsl), run the following command:

  $ sudo apt-get install g++-4.7 libboost-dev libgsl0-dev

One Mac OS X, you must install XCode (version 7) and Homebrew. To
install the gsl and boost libraries with Homebrew, use the following command:

  $ brew install gsl boost

On both platforms, compile using the following command in the 'qub' directory:

  $ make

This will compile the libqubtree.a in the qubsuite directory.

Finally, run the qubtree_compile_mex function in MATLAB to make the MEX files.


KNOWN ISSUES
============




ADJUSTMENTS TO ORIGINAL QUB SOURCE CODE REQUIRED FOR COMPILATION
================================================================

The source code required a few minor adjustments to support modern compilers.
These are provided here to assist in migrating future versions of QuB for use
with SPARTAN. I did not bother fixing the many compiler errors due to the use
of depricated functions, etc.

1) Add the following define wherever <hash_map> is #include'd.

	#define _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS 1

2) For Visual Studio projects, retarget to VS 2015 and insure the toolset is
   VC14. Adjust input header and libraries directories to appropriate locations,
   remove any extraneous references. Same with output target. Also make sure
   the output format is .lib (static).

3) For static compilation of libraries, remove QTR_DLLEXPORT (etc) lines
    from QUB_QTR_Impl.h etc. The __declspec lines will throw errors.

*) Other changes are likely required, depending on the compiler version.

All questions about QuB should be directed to:
 Christopher Nicolai <nicolaitanes@gmail.com>



